countdown_timer <- function(
minutes = 1,
play_sound = TRUE,
font_size = "2em",
...
) {
countdown(
minutes = minutes,
# Fanfare when it's over
play_sound = play_sound,
# Set timer theme to match solarized colors
color_border              = "#404041",
color_text                = "white",
color_background = "#447099",
color_running_background  = "#72994E",
color_running_text        = "white",
color_finished_background = "#EE6331",
color_finished_text       = "white",
font_size = font_size,
...
)
}
library(tidyverse)
library quarto
library "quarto"
library(quarto)
quarto::quarto_render()
![Fractal ](images/the_wave.jpg)
![Boston Terrier](images/boston-terrier.png)
![Fractal ](images/the_wave.jpg)
#| echo: fenced
#| fig-width: 4
#| fig-align: right
knitr::include_graphics("images/attennea_fractal.png")
#| include: false
library(tidyverse)
library(palmerpenguins)
library(ggiraph)
library(gt)
library(gtExtras)
library(gtsummary)
#| echo: fenced
#| eval: false
#| layout-ncol: 2
#| fig-cap:
#|   - "Speed and Stopping Distances of Cars"
#|   - "Engine displacement and fuel efficiency in Cars"
cars |>
ggplot(aes(x = speed, y = dist)) +
geom_point()
mtcars |>
ggplot(aes(x = disp, y = mpg)) +
geom_point()
#| echo: fenced
#| eval: false
#| label: fig-charts
#| fig-cap: Charts
#| fig-subcap:
#|   - "Cars"
#|   - "mtcars"
#| layout-ncol: 2
cars |>
ggplot(aes(x = speed, y = dist)) +
geom_point()
mtcars |>
ggplot(aes(x = disp, y = mpg)) +
geom_point()
#| echo: fenced
#| eval: false
#| layout: [[45,-10, 45], [100]]
cars |>
ggplot(aes(x = speed, y = dist)) +
geom_point()
mtcars |>
ggplot(aes(x = disp, y = mpg)) +
geom_point()
mtcars |>
ggplot(aes(x = cyl, y = mpg, group = cyl, color = factor(cyl))) +
geom_boxplot() +
geom_jitter()
library(palmerpenguins)
library(ggplot2)
ggplot2::theme_set(ggplot2::theme_minimal())
penguins <- na.omit(penguins)
#| echo: true
mass_flipper <- ggplot(data = penguins,
aes(x = flipper_length_mm,
y = body_mass_g)) +
geom_point(aes(color = species,
shape = species),
size = 3,
alpha = 0.8) +
scale_color_manual(values = c("darkorange","purple","cyan4")) +
labs(title = "Penguin size, Palmer Station LTER",
subtitle = "Flipper length and body mass for Adelie, Chinstrap and Gentoo Penguins",
x = "Flipper length (mm)",
y = "Body mass (g)",
color = "Penguin species",
shape = "Penguin species") +
theme(legend.position = c(0.2, 0.7),
plot.title.position = "plot",
plot.caption = element_text(hjust = 0, face= "italic"),
plot.caption.position = "plot")
mass_flipper
#| echo: fenced
#| fig-height: 10
#| fig-dpi: 600
mass_flipper
#| echo: fenced
#| fig-height: 10
#| fig-width: 16
#| fig-dpi: 400
mass_flipper
#| echo: fenced
#| fig-align: center
mass_flipper
library(leaflet)
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-77.0168, lat=38.7814, popup="You are here - in Maryland!")
library(tidyverse)
library(sf)
library(ggiraph)
library(glue)
library(cowplot)
texas_income <- readRDS(url("https://wilkelab.org/SDS375/datasets/Texas_income.rds")) %>%
select(-county)
US_census <- read_csv("https://wilkelab.org/SDS375/datasets/US_census.csv")
tx_census <- US_census %>%
filter(state == "Texas") %>%
select(FIPS, name, pop2010, area) %>%
extract(name, "county", regex = "(.+) County") %>%
mutate(
FIPS = as.character(FIPS),
popratio = pop2010/median(pop2010),
)
texas_counties <- left_join(texas_income, tx_census, by = "FIPS")
texas_scatter <- texas_counties %>%
ggplot(aes(pop2010, median_income)) +
geom_point_interactive(
aes(
tooltip = county,
data_id = county
),
na.rm = TRUE, size = 3
) +
scale_x_log10() +
theme_bw()
# then make the map
texas_county_map <- texas_counties %>%
ggplot() +
geom_sf_interactive(
aes(
tooltip = county,
data_id = county
),
size = 0.2, color = "black"
) +
theme_void()
#| eval: false
girafe(
ggobj = plot_grid(texas_scatter, texas_county_map),
width_svg = 6,
height_svg = 3
)
#| echo: false
girafe(
ggobj = plot_grid(texas_scatter, texas_county_map),
width_svg = 6,
height_svg = 3
)
library(dplyr, warn.conflicts = FALSE)
library(gt)
library(gtExtras)
library(gtsummary)
head(mtcars) |>
gt() |>
tab_options(
table.font.size = px(40), #< because I've made the slides a lot bigger
column_labels.font.size = px(45) #< normally don't have to increase this
)
trial2 <- trial %>% dplyr::select(trt, age, grade)
dplyr::glimpse(trial2)
#| fig-align: left
trial2 %>% tbl_summary(by = trt) %>% add_p()
penguins <- palmerpenguins::penguins
penguin_sum <- penguins |>
na.omit() |>
group_by(species, sex) |>
summarise(
n = n(),
bill_len = mean(bill_length_mm),
plt_bill = list(bill_length_mm),
mass = mean(body_mass_g),
plt_mass = list(body_mass_g),
.groups = "drop"
) |>
arrange(species, desc(bill_len))
penguin_sum
#| echo: fenced
#| output-location: slide
#| fig-width: 10
gt(penguin_sum) |>
gt_plt_dist(
plt_bill,
line_color = "#447099",
fill = "#75aadb",
fig_dim = c(15, 50)
) |>
gt_plt_dist(
plt_mass,
line_color = "#447099",
fill = "#75aadb"
) |>
gt_add_divider(
c(bill_len, mass), "left",
weight = px(1), color = "#d3d3d3"
) |>
cols_align("left", species) |>
text_transform(
cells_body(sex),
fn = function(x){
sex_planet <- ifelse(x == "male", "mars", "venus")
purrr::map(
sex_planet,
~fontawesome::fa(
.x, height = "45px",
fill = ifelse(.x =="mars", "#7fbf7b", "#af8dc3")))
}) |>
gt_theme_nytimes() |>
tab_options(data_row.padding = px(2),
table.font.size = px(40),
column_labels.font.size = px(35))
party_df <- tibble(
Party = c("SPD", "CDU/CSU", "Greens", "FDP", "AfD", "Left", "Other"),
Seats = c(206, 196, 118, 92, 83, 39, 1),
`% of 2nd Votes` = c(25.7, 24.1, 14.8, 11.5, 10.3, 4.9, 8.7)
)
minimal_table <- gt(party_df) %>%
gtExtras::gt_plt_dot(column = Seats, category_column = Party,  max_value = 379,
palette = c("#ec323f", "black", "#63d64a", "#fff24e", "#4fabf7", "#e956ad", "grey")) %>%
gtExtras::gt_theme_nytimes() %>%
gt::tab_header(title = "Results by Party in the Bundestag Election",
subtitle = "Seats and votes are based on provisional official results.") %>%
gt::cols_width(Party ~ px(300), 3 ~ px(30))
#| include: false
library(tidyverse)
library(palmerpenguins)
library(ggiraph)
library(gt)
library(gtExtras)
library(gtsummary)
mtcars |>
ggplot(aes(x = disp, y = mpg)) +
geom_point()
library(leaflet)
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-29.081175446541923, lat=-110.96104445315554, popup="You are here - in Maryland!")
library(leaflet)
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="You are here - in Maryland!")
library(leaflet)
m <- leaflet() %>% addTiles() %>%
# Add default OpenStreetMap map tiles
m <- m %>% setView(-93.65, 42.0285, zoom = 17)
library(leaflet)
m = leaflet() %>% addTiles() %>%
# Add default OpenStreetMap map tiles
m = m %>% setView(-93.65, 42.0285, zoom = 17)
library(leaflet)
m = leaflet() %>% addTiles()
m = m %>% setView(-93.65, 42.0285, zoom = 17)
m
m = leaflet() %>% addTiles()
m = m %>% setView(29.081076995633005, -110.96102835990158, zoom = 17)
m
m = leaflet() %>% addTiles()
m
m = m %>% setView(19.4326, -99.13, zoom = 17)
m
library(leaflet)
Latitude=c(21.1619, 19.4326, 16.8531,22.8905, 20.6597, 20.4230, 20.2114, 19.6861, 17.4848,
20.6843, 16.7370)
Longitude=c(-86.8515, -99.1332, -99.8237, -109.9167, -103.3496, -86.9223, -87.4654, -98.8716,
-92.0459, -88.5678, -92.6376)
popup=c("Cancun", "Mexico City", "Acapulco", "Los Cabos", "Guadalajara", "Cozumel", "Tulum",
"Teotihuacan", "Palenque", "Chichen Itza", "San Cristobal de las Casas")
coordinates<-data.frame(Latitude=Latitude, Longitude=Longitude, popup=popup)
my_map <- coordinates%>%leaflet() %>%
addTiles() %>%
addMarkers(lat=~Latitude, lng=~Longitude, popup = ~popup,
clusterOptions = markerClusterOptions())
my_map
# CRAN version
install.packages("leaflet.providers")
install.packages("leaflet.providers")
#| include: false
library(tidyverse)
library(palmerpenguins)
library(ggiraph)
library(gt)
library(gtExtras)
library(gtsummary)
library(leaflet)
leaflet()  |>
setView(lng = -71.0589, lat = 42.3601, zoom = 12) |>
addTiles() |>
addProviderTiles("OpenTopoMap")
leaflet()  |>
setView(lng = 29.0810, lat = -110.9610, zoom = 12) |>
addTiles() |>
addProviderTiles("OpenTopoMap")
leaflet()  |>
setView(lng = 29.08108, lat = -110.96104, zoom = 12) |>
addTiles() |>
addProviderTiles("OpenStreetMap.MX")
$providers
library(leaflet.providers)
str(providers_default(), max.level = 2)
m  # Print the map
library(leaflet)
lng_unison = 29.08108
lat_unison = -110.96104
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m
library(leaflet)
lng_unison = 29.08108
lat_unison = -110.96104
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=lng_unison, lat=lat_unison, popup="The birthplace of R")
m  # Print the map
library(leaflet)
lng_unison = 29.081
lat_unison = -110.96
m <- leaflet()
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=lng_unison, lat=lat_unison, popup="The birthplace of R")
m
lng_unison = 174.768
lat_unison = -36.852
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=lng_unison, lat=lat_unison, popup="The birthplace of R")
m
library(leaflet)
library(leaflet.extras)
install.packages(leaflet.extras)
install.packages("leaflet.extras")
library(leaflet)
library(leaflet.extras)
your_map <- leaflet() %>%
addTiles() %>%
setView(-71.0382679, 42.3489054, zoom = 18) %>%
addControlGPS(
options = gpsOptions(
position = "topleft",
activate = TRUE,
autoCenter = TRUE,
setView = TRUE))
activateGPS(your_map)
your_map <- leaflet() %>%
addTiles() %>%
setView(21.1619, -86.8515, zoom = 18) %>%
addControlGPS(
options = gpsOptions(
position = "topleft",
activate = TRUE,
autoCenter = TRUE,
setView = TRUE))
activateGPS(your_map)
m  # Imprime el mapa
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # AÃ±ade por defecto los Tiles de  OpenStreetMap
addMarkers(lng=-5.664112384, lat=40.96500844, popup="Plaza Mayor de Salamanca")
m  # Imprime el mapa
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # AÃ±ade por defecto los Tiles de  OpenStreetMap
addMarkers(lng=29.081096655250324, lat=-110.96104010916171, popup="Plaza Mayor de Salamanca")
m  # Imprime el mapa
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # AÃ±ade por defecto los Tiles de  OpenStreetMap
addMarkers(lng=29.081096655250324, lat=-110.96104010916171)
m
install.packages("magrittr")
install.packages("readxl")
install.packages("magrittr")
install.packages("tidyverse")
install.packages("htmltools")
install.packages("htmlwidgets")
install.packages("rgdal")
install.packages("rgeos")
install.packages("rcartocolor")
install.packages("htmlwidgets")
install.packages("htmltools")
install.packages("tidyverse")
install.packages("leaflet")
install.packages("leaflet")
install.packages("tidyverse")
install.packages("htmltools")
install.packages("htmltools")
install.packages("magrittr")
install.packages("magrittr")
install.packages("readxl")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("rgdal")
install.packages("rgeos")
install.packages("rcartocolor")
library(magrittr)
library(readxl)
library(tidyverse)
library(htmltools)
library(htmlwidgets)
library(rgdal)
install.packages("rgdal")
install.packages("rgdal", type="source")
library(raster)
url_2010 = "http://www.conapo.gob.mx/work/models/CONAPO/Marginacion/Datos_Abiertos/Municipio/IMM_DP2_2010.xlsx"
p1f <- tempfile()
download.file(url_2010, p1f, mode="wb")
data2010 <- read_excel(path = p1f, sheet = 2)
View(data2010)
url_2020 = "http://www.conapo.gob.mx/work/models/CONAPO/Marginacion/Datos_Abiertos/Municipio/IMM_2020.xls"
p1f <- tempfile()
download.file(url_2020, p1f, mode="wb")
data2020 <- read_excel(path = p1f, sheet = 2)
View(data2020)
data2010$GM_2010[data2010$GM_2010 == 'Muy bajo'] <- 'Very low'
data2010$GM_2010[data2010$GM_2010 == 'Bajo'] <- 'Low'
data2010$GM_2010[data2010$GM_2010 == 'Medio'] <- 'Medium'
data2010$GM_2010[data2010$GM_2010 == 'Alto'] <- 'High'
data2010$GM_2010[data2010$GM_2010 == 'Muy alto'] <- 'Very high'
data2020$GM_2020[data2020$GM_2020 == 'Muy bajo'] <- 'Very low'
data2020$GM_2020[data2020$GM_2020 == 'Bajo'] <- 'Low'
data2020$GM_2020[data2020$GM_2020 == 'Medio'] <- 'Medium'
data2020$GM_2020[data2020$GM_2020 == 'Alto'] <- 'High'
data2020$GM_2020[data2020$GM_2020 == 'Muy alto'] <- 'Very high'
levels=c("Very low", "Low", "Medium", "High", "Very high")
municipal_sonora_2010 <- data2010 %>%
filter(NOM_ENT=="Sonora") %>% mutate(GM_2010=factor(GM_2010,levels))
municipal_sonora_2010 %>% group_by(GM_2010) %>% summarise(n())
municipal_sonora_2010
municipal_sonora_2020 <- data2020 %>%
filter(NOM_ENT=="Sonora") %>% mutate(GM_2020=factor(GM_2020,levels))
municipal_sonora_2020 %>% group_by(GM_2020) %>% summarise(n())
municipal_sonora_2020
municipal_sonora_2010 <- rename(municipal_sonora_2010, CVEGEO = CVE_MUN)
municipal_sonora_2020 <- rename(municipal_sonora_2020, CVEGEO = CVE_MUN)
mun_base<- readOGR(dsn = "00mun.dbf", layer = "00mun")
mun_base<- readOGR(dsn = "00mun.dbf", layer = "00mun")
ent <- readOGR(dsn = "00ent.dbf", layer = "00ent")
mun_base@data$id_ent <- substr(mun_base@data$CVEGEO,1,2)
mun_base
mun_base<- readOGR(dsn = "00mun.dbf", layer = "00mun")
library(raster)
library(sp)
readOGR(dsn = "00mun.dbf", layer = "00mun")
clear
ls
ls
clear
library(here)
here()
path <-here()
path
pwd
getwd()
file_shp <-paste(path,"/materials/26_sonora/conjunto_de_datos")
file_shp
file_shp_mun <- paste(file_shp, "26ent.shp")
mun_base<- terra::vect(file_shp_mun)
path <- here()
file_shp <-paste(path,"/materials/26_sonora/conjunto_de_datos/")
file_shp
paste(file_shp, "26ent.shp")
file_shp <-paste(path,"/materials/26_sonora/conjunto_de_datos/", sep="")
path <- here()
file_shp <-paste(path,"/materials/26_sonora/conjunto_de_datos/", sep="")
file_shp_mun <- paste(file_shp,"26ent.shp", sep="")
file_shp_mun
mun_base <- terra::vect(file_shp_mun)
mun_base
file_shp_ent <- paste(file_shp,"26ent.shp", sep="")
file_shp_mun <- paste(file_shp,"26mun.shp", sep="")
file_shp_ent <- paste(file_shp,"26ent.shp", sep="")
ent <- terra::vect(file_shp_ent)
mun_base@data$id_ent <- substr(mun_base@data$CVEGEO,1,2)
mun_base
ent <- terra::vect(file_shp_ent)
ent
mun_Son_2010 <- spTransform(
mun_base,
CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
)
library(sp)
mun_Son_2010 <- spTransform(
mun_base,
CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
)
install.packages("Rtools")
