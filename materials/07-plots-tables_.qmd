---
format: 
  revealjs:
    self-contained: true
    slide-number: true
    width: 1920
    height: 1080
    logo: "images/RStudio-Logo-Flat.png"
    footer: "[Get started with Quarto](https://rstudio-conf-2022.github.io/get-started-quarto/)"
    css: ["theme/theme.css"]
    theme: league
    code-fold: true
    code-link: true
editor: source
execute: 
  echo: true
---

# 07 - Plots, Graphics, and tables {background-color="#4f6952" background-image="images/outdoor-patio.jpg" background-size="cover"}

```{r setup}
#| include: false
library(tidyverse)
library(palmerpenguins)
library(ggiraph)
library(gt)
library(gtExtras)
library(gtsummary)
```

## Layout

```         
::: {#fig-dogs layout-ncol=2}

![Sleeping](images/boston-sleep.png){#fig-sleep}

![Happy](images/boston-terrier.png){#fig-awake}

The two states of Howard.

:::
```

## Layout

::: {#fig-dogs layout-ncol="2"}
![Sleeping](images/boston-sleep.png){#fig-sleep}

![Happy](images/boston-terrier.png){#fig-awake}

The two states of Howard.
:::

## Figure panels

```         
::: {layout-ncol=2}
![Howard on a couch](images/howard-comfy.png)

![Howard in a table](images/howard-table.png)
:::
```

## Multiple rows

```         
::: {layout-nrow=2}
![Howard on a couch](images/howard-comfy.png)

![Howard in a table](images/howard-table.png)

![Howard sleeping](images/boston-sleep.png)

![Howard awake](images/boston-terrier.png)
:::
```

## Figure divs

> You can treat any markdown content you want as a figure by enclosing it in
> Pandoc div block with an identifier prefaced with #fig-. For example, here we
> create a figure that includes an embedded iframe:

```         
::: {#fig-elephant}

<iframe width="560" height="315" src="https://www.youtube.com/embed/SNggmeilXDQ"></iframe>

Elephant
:::
```

::: {#fig-elephant}
<iframe width="560" height="315" src="https://www.youtube.com/embed/SNggmeilXDQ">

</iframe>

Elephant
:::

# `r fontawesome::fa("laptop-code", "white")` Your Turn {background-color="#447099" transition="slide-in"}

-   Open `materials/workshop/07-static/figure-layout`
-   Swap between row and col layout

## Custom Layouts

::: columns
::: {.column width="50%"}
Read `[[1,1], [1]]` as:

Row 1: two equal sized images each taking up half of the column

Row 2: one image, taking up the entire column

```         
::: {layout="[[1,1], [1]]"}
![Howard sleeping](images/boston-sleep.png)

![Howard in a table](images/howard-table.png)

![Howard on a couch](images/howard-comfy.png)
:::
```
:::

::: {.column width="50%"}
![](images/custom-layout-equal.png)
:::
:::

## Custom Layouts

::: columns
::: {.column width="50%"}
Read `"[[70,30], [100]]"` as:

Row 1: two images, taking up 70% and 30% of the column

Row 2: one image, taking up 100% of column

```         
::: {layout="[[70,30], [100]]"}

![Howard on a couch](images/howard-comfy.png)

![Howard sleeping](images/boston-sleep.png)

![Howard in a table](images/howard-table.png)
:::
```
:::

::: {.column width="50%"}
![](images/custom-layout-70-30.png)
:::
:::

## Custom layouts

::: columns
::: {.column width="50%"}
You can also add negative values for "blank space"

`[[40,-20,40], [100]]`

Row 1: 40% image 1, 20% blank, 40% image 2

Row 2: 100% image 3

```         
::: {layout="[[40,-20,40], [100]]"}
![Howard on a couch](images/howard-comfy.png)

![Howard sleeping](images/boston-sleep.png)

![Howard in a table](images/howard-table.png)
:::
```
:::

::: {.column width="50%"}
![](images/howard-layout-blankspace.png)
:::
:::

## Custom layouts, vertical

::: columns
::: {.column width="50%"}
If images within a row are of differing heights, you can control vertical
alignment.

`{layout="[25,-2,10]" layout-valign="bottom"}`

Row: 25

```         
::: {layout="[25,-2,10]" layout-valign="bottom"}
![Howard on a couch](images/howard-comfy.png)

![Howard in a table](images/howard-table.png)
:::
```
:::

::: {.column width="50%"}
![](images/howard-layout-vertical.png)
:::
:::

# `r fontawesome::fa("laptop-code", "white")` Your Turn {background-color="#447099" transition="slide-in"}

-   Open `materials/workshop/07-visuals/figure-layout2.qmd`

## Figure layout

::: panel-tabset
## Code

``` r
#| include: true
#| warning: false
#| layout-ncol: 2
#| echo: true
#| eval: true
#| fig-cap: 
#|   - "Speed and Stopping Distances of Cars"
#|   - "Engine displacement and fuel efficiency in Cars"

cars |> 
  ggplot(aes(x = speed, y = dist)) +
  geom_point()

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point()
```

## Plot

```{r}
#| include: true
#| warning: false
#| layout-ncol: 2
#| echo: true
#| eval: true
#| fig-cap: 
#|   - "Speed and Stopping Distances of Cars"
#|   - "Engine displacement and fuel efficiency in Cars"

cars |> 
  ggplot(aes(x = speed, y = dist)) +
  geom_point()

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point()
```
:::

## Figure layout, subcaptions

::: panel-tabset
## Code

``` r
#| echo: fenced
#| eval: true
#| label: fig-charts
#| fig-cap: Charts
#| fig-subcap: 
#|   - "Cars"
#|   - "mtcars"
#| layout-ncol: 2

cars |> 
  ggplot(aes(x = speed, y = dist)) +
  geom_point()

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point()
```

## Output

```{r}
#| echo: fenced
#| eval: true
#| label: fig-charts
#| fig-cap: Charts
#| fig-subcap: 
#|   - "Cars"
#|   - "mtcars"
#| layout-ncol: 2

cars |> 
  ggplot(aes(x = speed, y = dist)) +
  geom_point()

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point()
```

## Static image

![](images/plot-subcaptions.jpeg)
:::

## Figure layout, custom

::: panel-tabset
## Code

``` r
#| echo: fenced
#| eval: true
#| layout: [[45,-10, 45], [100]]

cars |> 
  ggplot(aes(x = speed, y = dist)) +
  geom_point()

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point()

mtcars |> 
  ggplot(aes(x = cyl, y = mpg, group = cyl, color = factor(cyl))) +
  geom_boxplot() +
  geom_jitter()
```

## Output

```{r}
#| echo: fenced
#| eval: true
#| layout: [[45,-10, 45], [100]]

cars |> 
  ggplot(aes(x = speed, y = dist)) +
  geom_point()

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point()

mtcars |> 
  ggplot(aes(x = cyl, y = mpg, group = cyl, color = factor(cyl))) +
  geom_boxplot() +
  geom_jitter()
```

## Static image

![](images/figure-layout-custom.jpeg)
:::

# `r fontawesome::fa("laptop-code", "white")` Your Turn {background-color="#447099" transition="slide-in"}

-   Open `materials/workshop/07-visuals/plot-layout.qmd`
-   Explore, try it out and render

## Block layout, arbitrary content

```         
::: {layout-ncol=2}
## List One

- Item A
- Item B
- Item C

## List Two

- Item X
- Item Y
- Item Z
:::
```

## Block layout, arbitrary content

::: {layout-ncol="2"}
## List One

-   Item A
-   Item B
-   Item C

## List Two

-   Item X
-   Item Y
-   Item Z
:::

## Block layout, arbitrary content

``` code
::: {layout-ncol=2}
- Item X
- Item Y
- Item Z

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur gravida eu erat et fring. Morbi congue augue vel eros ullamcorper, eget convallis tortor sagittis. Fusce sodales viverra mauris a fringilla. Donec feugiat, justo eu blandit placerat, enim dui volutpat turpis, eu dictum lectus urna eu urna. Mauris sed massa ornare, interdum ipsum a, semper massa. 
:::
```

## Block layout, arbitrary content

::: {layout-ncol="2"}
-   Item X
-   Item Y
-   Item Z

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur gravida eu
erat et fring. Morbi congue augue vel eros ullamcorper, eget convallis tortor
sagittis. Fusce sodales viverra mauris a fringilla. Donec feugiat, justo eu
blandit placerat, enim dui volutpat turpis, eu dictum lectus urna eu urna.
Mauris sed massa ornare, interdum ipsum a, semper massa.
:::

## Grid, custom layout

The "grid" layout in Quarto is 12 units wide - you can break up the grid into
different subsections as long as they add up to 12.

::: grid
::: g-col-4
This column takes 1/3 of the page ![](images/boston-terrier.png)
:::

::: g-col-8
This column takes 2/3 of the page ![](images/howard-comfy.png)
:::
:::

. . .

``` code
::: {.grid}

::: {.g-col-4}
This column takes 1/3 of the page
![](boston-terrier.png)
:::

::: {.g-col-8}
This column takes 2/3 of the page
![](boston-sleep.png)
:::

:::
```

# `r fontawesome::fa("laptop-code", "white")` Your Turn {background-color="#447099" transition="slide-in"}

-   Try out the grid layout in the previous slide, modifying the `.g-col-8` to
    add up to a total of 12
-   Create a new Quarto doc

## Article Layout

Quarto supports a variety of page layout options that enable you to author
content that:

-   Fills the main content region `.column-body`
-   Overflows the content region `.column-body-outset`
-   Spans the entire page `.column-page`
-   Occupies the document margin `.column-margin`

. . .

Put it in a div, and assign a specific class

``` code
:::{.column-body-outset}
Outset content...
:::
```

``` code
:::{.column-margin}
Margin/aside figure
:::
```

# `r fontawesome::fa("laptop-code", "white")` Your Turn {background-color="#447099" transition="slide-in"}

-   Open `materials/workshop/07-visuals/plots.qmd`
-   Try modifying the layout with `::: {.column-???}` syntax

## `ggplot2`

```{r}
library(palmerpenguins)
library(ggplot2)
ggplot2::theme_set(ggplot2::theme_minimal())
penguins <- na.omit(penguins)
```

## `ggplot2`

```{r}
#| echo: true
mass_flipper <- ggplot(data = penguins, 
                       aes(x = flipper_length_mm,
                           y = body_mass_g)) +
  geom_point(aes(color = species, 
                 shape = species),
             size = 3,
             alpha = 0.8) +
  scale_color_manual(values = c("darkorange","purple","cyan4")) +
  labs(title = "Penguin size, Palmer Station LTER",
       subtitle = "Flipper length and body mass for Adelie, Chinstrap and Gentoo Penguins",
       x = "Flipper length (mm)",
       y = "Body mass (g)",
       color = "Penguin species",
       shape = "Penguin species") +
  theme(legend.position = c(0.2, 0.7),
        plot.title.position = "plot",
        plot.caption = element_text(hjust = 0, face= "italic"),
        plot.caption.position = "plot")
```

## `ggplot2`

```{r}
mass_flipper
```

## `ggplot2`

```{r}
#| echo: fenced
#| fig-height: 2
mass_flipper
```

## `ggplot2`

```{r}
#| echo: fenced
#| fig-height: 4
#| fig-dpi: 600
mass_flipper
```

## `ggplot2`

```{r}
#| echo: fenced
#| fig-height: 10
#| fig-dpi: 600
mass_flipper
```

## `ggplot2`

```{r}
#| echo: fenced
#| fig-height: 10
#| fig-width: 16
#| fig-dpi: 400
mass_flipper
```

## `ggplot2`

```{r}
#| echo: fenced
#| fig-align: center
mass_flipper
```

## Interactivity

Quarto supports Jupyter Widgets (with Jupyter) or `htmlwidgets` in R/knitr

```{r install libraries}

install.packages("magrittr")
install.packages("readxl")
install.packages("tidyverse") 
install.packages("htmltools") 
install.packages("htmlwidgets") 
install.packages("rgdal") 
install.packages("rgeos")
install.packages("rcartocolor")
install.packages("leaflet")

```

```{r}
library(magrittr)
library(readxl)
library(tidyverse)
library(htmltools)
library(htmlwidgets)
#library(rgdal)
library(raster)
library(rcartocolor)
library(leaflet)
```

```{r Data Download}

url_2010 = "http://www.conapo.gob.mx/work/models/CONAPO/Marginacion/Datos_Abiertos/Municipio/IMM_DP2_2010.xlsx"
p1f <- tempfile()
download.file(url_2010, p1f, mode="wb")
data2010 <- read_excel(path = p1f, sheet = 2)
View(data2010)

url_2020 = "http://www.conapo.gob.mx/work/models/CONAPO/Marginacion/Datos_Abiertos/Municipio/IMM_2020.xls"
p1f <- tempfile()
download.file(url_2020, p1f, mode="wb")
data2020 <- read_excel(path = p1f, sheet = 2)
View(data2020)

```

```{r Changing categorical values from Spanish to English}

data2010$GM_2010[data2010$GM_2010 == 'Muy bajo'] <- 'Very low'
data2010$GM_2010[data2010$GM_2010 == 'Bajo'] <- 'Low'
data2010$GM_2010[data2010$GM_2010 == 'Medio'] <- 'Medium'
data2010$GM_2010[data2010$GM_2010 == 'Alto'] <- 'High'
data2010$GM_2010[data2010$GM_2010 == 'Muy alto'] <- 'Very high'


data2020$GM_2020[data2020$GM_2020 == 'Muy bajo'] <- 'Very low'
data2020$GM_2020[data2020$GM_2020 == 'Bajo'] <- 'Low'
data2020$GM_2020[data2020$GM_2020 == 'Medio'] <- 'Medium'
data2020$GM_2020[data2020$GM_2020 == 'Alto'] <- 'High'
data2020$GM_2020[data2020$GM_2020 == 'Muy alto'] <- 'Very high'

```

```{r Level’s vector}
levels=c("Very low", "Low", "Medium", "High", "Very high")
```

```{r filtered data according to SEI level}
municipal_sonora_2010 <- data2010 %>% 
  filter(NOM_ENT=="Sonora") %>% mutate(GM_2010=factor(GM_2010,levels))
municipal_sonora_2010 %>% group_by(GM_2010) %>% summarise(n())
municipal_sonora_2010

municipal_sonora_2020 <- data2020 %>% 
  filter(NOM_ENT=="Sonora") %>% mutate(GM_2020=factor(GM_2020,levels))
municipal_sonora_2020 %>% group_by(GM_2020) %>% summarise(n())
municipal_sonora_2020

```

```{r Data merge}

municipal_sonora_2010 <- rename(municipal_sonora_2010, CVEGEO = CVE_MUN)
municipal_sonora_2020 <- rename(municipal_sonora_2020, CVEGEO = CVE_MUN)

```

```{r Setting of shape files}
library(here)
library(sp)
path <- here()
file_shp <-paste(path,"/materials/26_sonora/conjunto_de_datos/", sep="")
file_shp_mun <- paste(file_shp,"26mun.shp", sep="")
file_shp_ent <- paste(file_shp,"26ent.shp", sep="")
mun_base <- terra::vect(file_shp_mun)
ent <- terra::vect(file_shp_ent)
mun_Son_2010 <- spTransform(
  mun_base,
  CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
)
```
