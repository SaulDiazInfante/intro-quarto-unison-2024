{"title":"04 - Static Quarto Documents","markdown":{"yaml":{"format":{"revealjs":{"self-contained":true,"slide-number":"c/t","width":1920,"height":1080,"logo":"https://www.rstudio.com/wp-content/uploads/2018/10/RStudio-Logo-Flat.png","footer":"[Get started with Quarto](https://rstudio-conf-2022.github.io/get-started-quarto/)","css":["theme/theme.css"],"theme":"simple","echo":true}},"editor":"source"},"headingText":"04 - Static Quarto Documents","headingAttr":{"id":"","classes":[],"keyvalue":[["background-image","images/write-something.jpg"],["background-size","cover"],["background-color","black"],["style","font-size: 90px;"]]},"containsRefs":false,"markdown":"\n\n\n```{r}\n#| echo: false\nlibrary(countdown)\ncountdown_timer <- function(\n    minutes = 1, \n    play_sound = TRUE, \n    font_size = \"2em\", \n    ...\n) {\n  countdown(\n    minutes = minutes,\n    # Fanfare when it's over\n    play_sound = play_sound,\n    # Set timer theme to match solarized colors\n    color_border              = \"#404041\",\n    color_text                = \"white\",\n    color_background = \"#447099\",\n    color_running_background  = \"#72994E\",\n    color_running_text        = \"white\",\n    color_finished_background = \"#EE6331\",\n    color_finished_text       = \"white\",\n    font_size = font_size,\n    ...\n  )\n}\n```\n\n## HTML Workhorse\n\n[quarto.org/docs/reference/formats/html](https://quarto.org/docs/reference/formats/html.html)\n\n## Quarto and RMarkdown\n\n- Basic RMarkdown documents that render to static HTML and PDF are the most transferable directly to Quarto\n\n. . .\n\n:::: columns\n\n::: {.column width=\"50%\"}\n\n### R Markdown\n\n```yaml\ntitle: \"My Document\"\noutput:\n  html_document:\n    toc: true\n    number_sections: true\n    css: styles.css\n```    \n:::\n\n::: {.column width=\"50%\"}\n\n### Quarto\n\n```yaml\ntitle: \"My Document\"\nformat:\n  html:\n    toc: true\n    number-sections: true\n    css: styles.css\n```\n\n:::\n\n::::\n\n. . .\n\n<br>\n\n> One source of the difference in syntax is that Quarto is more closely aligned with Pandoc format names and options (thus the use of - as a word separator rather than _).\n\n\n# `r fontawesome::fa(\"laptop-code\", \"white\")` Your Turn {background-color=\"#447099\" transition=\"slide-in\"}\n\n- Open `materials/workshop/04-static/old-rmarkdown.rmd`\n- Render via Quarto CLI\n\n```{R}\n#| echo: false\ncountdown_timer(2)\n```\n\n## Static documents\n\n- A static document is your \"daily driver\" - has the power for a complex table of contents, figure alignment, control of ouptut/code, and other niceties\n- Useful as a lab notebook, scratchpad, or the final output for your team\n\n## Table of contents and Sections\n\nTable of contents (ToC) and sections are useful for breaking up longer documents.\n\n- Quarto will automatically build a ToC for level 3 headers and above but you can control this with:\n\n```yaml\ntoc-depth: 4\n```\n\nor \n\n```yaml\ntoc-depth: 2\n```\n\n. . .\n\n<iframe src = \"https://rstudio-conf-2022.github.io/get-started-quarto/materials/static/toc-1.html\" height=\"500\" width=\"1200\" ></iframe>\n\n\n## Table of Contents and Section\n\n<iframe src=\"https://rstudio-conf-2022.github.io/get-started-quarto/#getting-started-with-quarto\" width=\"1300px\" height=\"900px\"></iframe>\n\n\n## Tabsets\n\nSplit up and flip between sections of a page, alternative to just two columns\n\n```\n::: {.panel-tabset}\n\n## Element 1\n\n## Element 2\n\n:::\n```\n\n## Tabsets\n\n::: {.panel-tabset}\n\n## Code\n\n```{r}\n#| echo: fenced\n#| eval: false\nhead(mtcars)\n```\n\n\n## Output\n\n```{r}\n#| eval: true\n#| echo: false\nhead(mtcars)\n```\n\n:::\n\n## Tabsets\n\n````\n\n::: {.panel-tabset}\n\n## Code\n\n```{{r}}\n#| echo: fenced\n#| eval: false\nhead(mtcars)\n```\n\n\n## Output\n\n```{{r}}\n#| eval: true\n#| echo: false\nhead(mtcars)\n```\n\n:::\n````\n\n## Footnotes\n\nYou can create inline footnotes like so: `some inline text with a^[footnote]`\n\n. . .\n\nPandoc also supports numbering and formatting footnotes using the following syntax:\n\n<iframe src=\"https://rstudio-conf-2022.github.io/get-started-quarto/materials/static/fancy-footnotes.html\" height=\"800\" width=\"1200\"></iframe>\n\n## Cross-references\n\n`![Howard is glamorous](images/howard-glamour.jpg){#fig-glamour}`\n\n> The presence of the caption (Howard is glamouros) and label (#fig-howard) make this figure referenceable. This enables you to use the following syntax to refer to it elsewhere in the document\n\n. . .\n\n![Howard is glamorous](images/howard-glamour.jpg){#fig-glamour fig-align=\"left\"}\n\n. . .\n\n@fig-glamour is a great glamour shot of Howard\n\n## Reference popups\n\nIf you hover your mouse over the citation and footnote in this sentence you’ll see a popup displaying the reference contents:\n\n```\nformat:\n  html:\n    citations-hover: true\n    footnotes-hover: true\n```\n\n. . .\n\n<br>\n\n```\nFor example, did you know that Howard is a dog^[Specifically he is a Boston Terrier, although sometimes he acts like a cat]?\n```\n\n. . .\n\n<iframe src=\"static/footnote.html\" height=\"600\" width = \"1000\"></iframe>\n\n# Code {background-color=\"#4f6952\"}\n\n## Hide all code\n\n```yaml\nformat: html\nexecute:\n  echo: false\n```\n\n. . .\n\nTurn back on at individual code-block level:\n\n```r\n#| echo: true\n```\n\n## Fold code\n\n```yaml\nformat:\n  html:\n    code-fold: true\n    code-summary: \"Hidden code\"\n```\n\n. . .\n\nTurn on at individual code-block level:\n\n```r\n#| code-fold: true\n#| code-summary: \"Hidden code\"\n```\n\n## Code tools\n\n```yaml\nformat:\n  html:\n    code-fold: true\n    code-tools: true\n```\n\n. . .\n\n![](https://quarto.org/docs/output-formats/images/code-tools-01.png)\n\n## Code tools, source\n\n> For example, here we specify that we want only “View Source” (no toggling of code visibility) and no caption on the code menu:\n\n```yaml\nformat:\n  html: \n    code-tools:\n      source: true\n      toggle: false\n      caption: none\n```\n\n. . .\n\n![](https://quarto.org/docs/output-formats/images/code-tools-source.png)\n\n## Code tools, source repo\n\nIn some situations (especially for longer documents), you may prefer to send viewers to the source code on a version-control website rather than the built in viewer.\n\n. . .\n\n```yaml\nformat:\n  html: \n    code-tools:\n      source: https://github.com/quarto-dev/quarto-web/blob/main/index.md\n```\n\n# `r fontawesome::fa(\"laptop-code\", \"white\")` Your Turn {background-color=\"#447099\" transition=\"slide-in\"}\n\n- Open `materials/workshop/04-static/penguin-report.qmd`\n- Explore the document as a concept of literate programming or a \"lab notebook\"\n- Change the code to all fold, render\n- Change the code to source and toggle\n\n```{R}\n#| echo: false\ncountdown_timer(4)\n```\n\n# Code appearance {background-color=\"#4f6952\"}\n\n## Code highlighting\n\n[Full highlighting options](https://quarto.org/docs/output-formats/html-code.html#highlighting)\n\n```{r}\n#| message: false\nlibrary(dplyr)\nmtcars |> \n  group_by(cyl, am) |> \n  summarize(mean = mean(mpg), n = n(), .groups = \"drop\")\n```\n\n## Code highlighting\n\n```yaml\nformat: \n  html:\n    highlight-style: dracula\n    code-block-border-left: \"#4f6952\"\n```\n\n![](images/dracula.png)\n\n## Code highlighting\n\n```yaml\nformat: \n  html:\n    highlight-style: github\n    code-block-border-left: \"#4f6952\"\n    code-block-bg: true\n```\n\n![](images/github.png)\n\n## Code linking with [`downlit`](https://downlit.r-lib.org/)\n\n> The goal of `downlit` is to provide syntax highlighting and automatic linking of R code\n\n```yaml\nformat:\n  html:\n    code-link: true\n```\n\n# Aesthetics {background-image=\"images/howard-gentleman.jpg\" background-size=\"contain\" background-position=\"right\" background-color=\"black\"}\n\n## HTML Appearance\n\nOut of the box, Quarto is styled with Bootstrap 5 and opinionated defaults.\n\nBootstrap is the most popular CSS Framework for responsive websites, where v5 is the latest.\n\n. . .\n\nQuarto comes pre-installed with 25 themes from [Bootswatch](https://bootswatch.com/) and you can use them like so:\n\n```yaml\n---\nformat:\n  html:\n    theme: litera\n---\n```\n\n<br>\n\n. . .\n\nOr you can customize a theme with CSS/SCSS/SASS.\n\n```yaml\n---\nformat:\n  html:\n    theme: \n      - litera\n      - custom.scss\n---\n```\n\n## Bootswatch themes\n\n<iframe src=\"https://bootswatch.com/\" height=\"900\" width=\"1200\"></iframe>\n\n## Bootswatch: lumen\n\n<iframe src=\"https://bootswatch.com/lumen/\" height=\"900\" width=\"1200\"></iframe>\n\n## Bootswatch: litera\n\n<iframe src=\"https://bootswatch.com/litera/\" height=\"900\" width=\"1200\"></iframe>\n\n## Bootswatch: flatly\n\n<iframe src=\"https://bootswatch.com/flatly/\" height=\"900\" width=\"1200\"></iframe>\n\n## Bootswatch: sketchy\n\n<iframe src=\"https://bootswatch.com/sketchy/\" height=\"900\" width=\"1200\"></iframe>\n\n# `r fontawesome::fa(\"laptop-code\", \"white\")` Your Turn {background-color=\"#447099\" transition=\"slide-in\"}\n\n- Open `materials/workshop/04-static/bootswatch-themed.qmd` and try out some themes!\n- 25 bootswatch themes\n- https://quarto.org/docs/output-formats/html-themes.html\n- https://quarto.org/docs/output-formats/html-themes-more.html\n\n```{R}\n#| echo: false\ncountdown_timer(2)\n```\n\n## CSS\n\nCSS = Cascading Style Sheets:\n\n> CSS is a language for specifying how documents are presented to users — how they are styled, laid out, etc [mdn web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps/What_is_CSS)\n\n. . .\n\nHTML structures the page, CSS styles it\n\n. . .\n\n```html\n<div style=\"color: red; font-size: 100px;\">Some text</div>\n```\n\n. . .\n\n<div style=\"color: red; font-size: 35px;\">Some text</div>\n\n. . .\n\nCSS can also bring in additional resources, like new fonts!\n\n```{css}\n@import url('https://fonts.googleapis.com/css2?family=Fira+Mono&display=swap');\n```\n\n\n## Inline css\n\n```\n:::{style=\"color: white; font-size: 150px; background-color:#d3d3d3;\"}\nText\n:::\n```\n\n. . .\n\n:::{style=\"color: white; font-size: 150px; background-color:#d3d3d3;\"}\nText\n:::\n\n. . .\n\n```\nSome text with [dplyr code]{style=\"font-family: 'Fira Mono !important'; background-color:#d3d3d3;\"} and more text.\n```\n\n. . .\n\nSome text with [code]{style=\"font-family: 'Fira Mono'; background-color:#d3d3d3;\"} and more text.\n\n## CSS Class\n\n```{css}\n.big-text {\n  font-size: 150px;\n  color: blue;\n}\n```\n\n```\n::: {.big-text}\n- Big text\n- Still big\n:::\n\n- Smol text\n```\n\n::: {.big-text}\n- Big text\n- Still big\n:::\n\n- Smol text\n\n## Class + spans\n\n```\nHere is some [big text]{.big-text} and some small text.\n```\n\nHere is some [big text]{.big-text} and some small text.\n\n## CSS Id\n\n```{css}\n#blue {\n  background-color: #3c6f9a;\n  color: #fa551b;\n}\n```\n\n. . .\n\n```markdown\n::: {#blue}\nSome content\n:::\n```\n\n::: {#blue}\nSome content\n:::\n\n. . .\n\n```markdown\nSome [text]{#blue}\n```\n\nSome [text]{#blue}\n\n## SCSS/SASS\n\n> SASS (Syntactically Awesome Style Sheets) is a pre-processor scripting language that will be compiled or interpreted into CSS. SassScript is itself a scripting language whereas SCSS is the main syntax for the SASS which builds on top of the existing CSS syntax\n\n. . .\n\nSass reduces repetition of CSS and therefore saves time - think of it like manually changing code vs using functions in R.\n\n. . .\n\nColor palette: [`#404042`]{style=\"background-color: #404042;\"} [`#3c6f9a`]{style=\"background-color: #3c6f9a;\"} [`#fa551b`]{style=\"background-color: #fa551b;\"}\n\n. . .\n\n```css\n$primary_1: #a2b9bc;\n$primary_2: #b2ad7f;\n$primary_3: #878f99;\n\n/* use the variables */\n.main-header {\n  background-color: $primary_1;\n}\n\n.menu-left {\n  background-color: $primary_2;\n}\n\n.menu-right {\n  background-color: $primary_3;\n}\n```\n\n## SASS variables + Quarto\n\n<iframe src=\"https://quarto.org/docs/output-formats/html-themes.html#sass-variables\" height=\"800\" width=\"1200\" ></iframe>\n\n## `format: PDF`\n\nTIP!\n- pandoc divs/spans are generally transferrable\n- CSS is _not_ transferable\n- Lean on Quarto/Pandoc tooling and then reach for raw CSS/LaTeX\n\n# `r fontawesome::fa(\"laptop-code\", \"white\")` Your Turn {background-color=\"#447099\" transition=\"slide-in\"}\n\n- Open `materials/workshop/01-intro/history.qmd`\n- Render as HTML and then render as PDF\n\n```{R}\n#| echo: false\ncountdown_timer(3)\n```","srcMarkdownNoYaml":"\n\n# 04 - Static Quarto Documents {background-image=\"images/write-something.jpg\" background-size=\"cover\" background-color=\"black\" style=\"font-size: 90px;\"}\n\n```{r}\n#| echo: false\nlibrary(countdown)\ncountdown_timer <- function(\n    minutes = 1, \n    play_sound = TRUE, \n    font_size = \"2em\", \n    ...\n) {\n  countdown(\n    minutes = minutes,\n    # Fanfare when it's over\n    play_sound = play_sound,\n    # Set timer theme to match solarized colors\n    color_border              = \"#404041\",\n    color_text                = \"white\",\n    color_background = \"#447099\",\n    color_running_background  = \"#72994E\",\n    color_running_text        = \"white\",\n    color_finished_background = \"#EE6331\",\n    color_finished_text       = \"white\",\n    font_size = font_size,\n    ...\n  )\n}\n```\n\n## HTML Workhorse\n\n[quarto.org/docs/reference/formats/html](https://quarto.org/docs/reference/formats/html.html)\n\n## Quarto and RMarkdown\n\n- Basic RMarkdown documents that render to static HTML and PDF are the most transferable directly to Quarto\n\n. . .\n\n:::: columns\n\n::: {.column width=\"50%\"}\n\n### R Markdown\n\n```yaml\ntitle: \"My Document\"\noutput:\n  html_document:\n    toc: true\n    number_sections: true\n    css: styles.css\n```    \n:::\n\n::: {.column width=\"50%\"}\n\n### Quarto\n\n```yaml\ntitle: \"My Document\"\nformat:\n  html:\n    toc: true\n    number-sections: true\n    css: styles.css\n```\n\n:::\n\n::::\n\n. . .\n\n<br>\n\n> One source of the difference in syntax is that Quarto is more closely aligned with Pandoc format names and options (thus the use of - as a word separator rather than _).\n\n\n# `r fontawesome::fa(\"laptop-code\", \"white\")` Your Turn {background-color=\"#447099\" transition=\"slide-in\"}\n\n- Open `materials/workshop/04-static/old-rmarkdown.rmd`\n- Render via Quarto CLI\n\n```{R}\n#| echo: false\ncountdown_timer(2)\n```\n\n## Static documents\n\n- A static document is your \"daily driver\" - has the power for a complex table of contents, figure alignment, control of ouptut/code, and other niceties\n- Useful as a lab notebook, scratchpad, or the final output for your team\n\n## Table of contents and Sections\n\nTable of contents (ToC) and sections are useful for breaking up longer documents.\n\n- Quarto will automatically build a ToC for level 3 headers and above but you can control this with:\n\n```yaml\ntoc-depth: 4\n```\n\nor \n\n```yaml\ntoc-depth: 2\n```\n\n. . .\n\n<iframe src = \"https://rstudio-conf-2022.github.io/get-started-quarto/materials/static/toc-1.html\" height=\"500\" width=\"1200\" ></iframe>\n\n\n## Table of Contents and Section\n\n<iframe src=\"https://rstudio-conf-2022.github.io/get-started-quarto/#getting-started-with-quarto\" width=\"1300px\" height=\"900px\"></iframe>\n\n\n## Tabsets\n\nSplit up and flip between sections of a page, alternative to just two columns\n\n```\n::: {.panel-tabset}\n\n## Element 1\n\n## Element 2\n\n:::\n```\n\n## Tabsets\n\n::: {.panel-tabset}\n\n## Code\n\n```{r}\n#| echo: fenced\n#| eval: false\nhead(mtcars)\n```\n\n\n## Output\n\n```{r}\n#| eval: true\n#| echo: false\nhead(mtcars)\n```\n\n:::\n\n## Tabsets\n\n````\n\n::: {.panel-tabset}\n\n## Code\n\n```{{r}}\n#| echo: fenced\n#| eval: false\nhead(mtcars)\n```\n\n\n## Output\n\n```{{r}}\n#| eval: true\n#| echo: false\nhead(mtcars)\n```\n\n:::\n````\n\n## Footnotes\n\nYou can create inline footnotes like so: `some inline text with a^[footnote]`\n\n. . .\n\nPandoc also supports numbering and formatting footnotes using the following syntax:\n\n<iframe src=\"https://rstudio-conf-2022.github.io/get-started-quarto/materials/static/fancy-footnotes.html\" height=\"800\" width=\"1200\"></iframe>\n\n## Cross-references\n\n`![Howard is glamorous](images/howard-glamour.jpg){#fig-glamour}`\n\n> The presence of the caption (Howard is glamouros) and label (#fig-howard) make this figure referenceable. This enables you to use the following syntax to refer to it elsewhere in the document\n\n. . .\n\n![Howard is glamorous](images/howard-glamour.jpg){#fig-glamour fig-align=\"left\"}\n\n. . .\n\n@fig-glamour is a great glamour shot of Howard\n\n## Reference popups\n\nIf you hover your mouse over the citation and footnote in this sentence you’ll see a popup displaying the reference contents:\n\n```\nformat:\n  html:\n    citations-hover: true\n    footnotes-hover: true\n```\n\n. . .\n\n<br>\n\n```\nFor example, did you know that Howard is a dog^[Specifically he is a Boston Terrier, although sometimes he acts like a cat]?\n```\n\n. . .\n\n<iframe src=\"static/footnote.html\" height=\"600\" width = \"1000\"></iframe>\n\n# Code {background-color=\"#4f6952\"}\n\n## Hide all code\n\n```yaml\nformat: html\nexecute:\n  echo: false\n```\n\n. . .\n\nTurn back on at individual code-block level:\n\n```r\n#| echo: true\n```\n\n## Fold code\n\n```yaml\nformat:\n  html:\n    code-fold: true\n    code-summary: \"Hidden code\"\n```\n\n. . .\n\nTurn on at individual code-block level:\n\n```r\n#| code-fold: true\n#| code-summary: \"Hidden code\"\n```\n\n## Code tools\n\n```yaml\nformat:\n  html:\n    code-fold: true\n    code-tools: true\n```\n\n. . .\n\n![](https://quarto.org/docs/output-formats/images/code-tools-01.png)\n\n## Code tools, source\n\n> For example, here we specify that we want only “View Source” (no toggling of code visibility) and no caption on the code menu:\n\n```yaml\nformat:\n  html: \n    code-tools:\n      source: true\n      toggle: false\n      caption: none\n```\n\n. . .\n\n![](https://quarto.org/docs/output-formats/images/code-tools-source.png)\n\n## Code tools, source repo\n\nIn some situations (especially for longer documents), you may prefer to send viewers to the source code on a version-control website rather than the built in viewer.\n\n. . .\n\n```yaml\nformat:\n  html: \n    code-tools:\n      source: https://github.com/quarto-dev/quarto-web/blob/main/index.md\n```\n\n# `r fontawesome::fa(\"laptop-code\", \"white\")` Your Turn {background-color=\"#447099\" transition=\"slide-in\"}\n\n- Open `materials/workshop/04-static/penguin-report.qmd`\n- Explore the document as a concept of literate programming or a \"lab notebook\"\n- Change the code to all fold, render\n- Change the code to source and toggle\n\n```{R}\n#| echo: false\ncountdown_timer(4)\n```\n\n# Code appearance {background-color=\"#4f6952\"}\n\n## Code highlighting\n\n[Full highlighting options](https://quarto.org/docs/output-formats/html-code.html#highlighting)\n\n```{r}\n#| message: false\nlibrary(dplyr)\nmtcars |> \n  group_by(cyl, am) |> \n  summarize(mean = mean(mpg), n = n(), .groups = \"drop\")\n```\n\n## Code highlighting\n\n```yaml\nformat: \n  html:\n    highlight-style: dracula\n    code-block-border-left: \"#4f6952\"\n```\n\n![](images/dracula.png)\n\n## Code highlighting\n\n```yaml\nformat: \n  html:\n    highlight-style: github\n    code-block-border-left: \"#4f6952\"\n    code-block-bg: true\n```\n\n![](images/github.png)\n\n## Code linking with [`downlit`](https://downlit.r-lib.org/)\n\n> The goal of `downlit` is to provide syntax highlighting and automatic linking of R code\n\n```yaml\nformat:\n  html:\n    code-link: true\n```\n\n# Aesthetics {background-image=\"images/howard-gentleman.jpg\" background-size=\"contain\" background-position=\"right\" background-color=\"black\"}\n\n## HTML Appearance\n\nOut of the box, Quarto is styled with Bootstrap 5 and opinionated defaults.\n\nBootstrap is the most popular CSS Framework for responsive websites, where v5 is the latest.\n\n. . .\n\nQuarto comes pre-installed with 25 themes from [Bootswatch](https://bootswatch.com/) and you can use them like so:\n\n```yaml\n---\nformat:\n  html:\n    theme: litera\n---\n```\n\n<br>\n\n. . .\n\nOr you can customize a theme with CSS/SCSS/SASS.\n\n```yaml\n---\nformat:\n  html:\n    theme: \n      - litera\n      - custom.scss\n---\n```\n\n## Bootswatch themes\n\n<iframe src=\"https://bootswatch.com/\" height=\"900\" width=\"1200\"></iframe>\n\n## Bootswatch: lumen\n\n<iframe src=\"https://bootswatch.com/lumen/\" height=\"900\" width=\"1200\"></iframe>\n\n## Bootswatch: litera\n\n<iframe src=\"https://bootswatch.com/litera/\" height=\"900\" width=\"1200\"></iframe>\n\n## Bootswatch: flatly\n\n<iframe src=\"https://bootswatch.com/flatly/\" height=\"900\" width=\"1200\"></iframe>\n\n## Bootswatch: sketchy\n\n<iframe src=\"https://bootswatch.com/sketchy/\" height=\"900\" width=\"1200\"></iframe>\n\n# `r fontawesome::fa(\"laptop-code\", \"white\")` Your Turn {background-color=\"#447099\" transition=\"slide-in\"}\n\n- Open `materials/workshop/04-static/bootswatch-themed.qmd` and try out some themes!\n- 25 bootswatch themes\n- https://quarto.org/docs/output-formats/html-themes.html\n- https://quarto.org/docs/output-formats/html-themes-more.html\n\n```{R}\n#| echo: false\ncountdown_timer(2)\n```\n\n## CSS\n\nCSS = Cascading Style Sheets:\n\n> CSS is a language for specifying how documents are presented to users — how they are styled, laid out, etc [mdn web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps/What_is_CSS)\n\n. . .\n\nHTML structures the page, CSS styles it\n\n. . .\n\n```html\n<div style=\"color: red; font-size: 100px;\">Some text</div>\n```\n\n. . .\n\n<div style=\"color: red; font-size: 35px;\">Some text</div>\n\n. . .\n\nCSS can also bring in additional resources, like new fonts!\n\n```{css}\n@import url('https://fonts.googleapis.com/css2?family=Fira+Mono&display=swap');\n```\n\n\n## Inline css\n\n```\n:::{style=\"color: white; font-size: 150px; background-color:#d3d3d3;\"}\nText\n:::\n```\n\n. . .\n\n:::{style=\"color: white; font-size: 150px; background-color:#d3d3d3;\"}\nText\n:::\n\n. . .\n\n```\nSome text with [dplyr code]{style=\"font-family: 'Fira Mono !important'; background-color:#d3d3d3;\"} and more text.\n```\n\n. . .\n\nSome text with [code]{style=\"font-family: 'Fira Mono'; background-color:#d3d3d3;\"} and more text.\n\n## CSS Class\n\n```{css}\n.big-text {\n  font-size: 150px;\n  color: blue;\n}\n```\n\n```\n::: {.big-text}\n- Big text\n- Still big\n:::\n\n- Smol text\n```\n\n::: {.big-text}\n- Big text\n- Still big\n:::\n\n- Smol text\n\n## Class + spans\n\n```\nHere is some [big text]{.big-text} and some small text.\n```\n\nHere is some [big text]{.big-text} and some small text.\n\n## CSS Id\n\n```{css}\n#blue {\n  background-color: #3c6f9a;\n  color: #fa551b;\n}\n```\n\n. . .\n\n```markdown\n::: {#blue}\nSome content\n:::\n```\n\n::: {#blue}\nSome content\n:::\n\n. . .\n\n```markdown\nSome [text]{#blue}\n```\n\nSome [text]{#blue}\n\n## SCSS/SASS\n\n> SASS (Syntactically Awesome Style Sheets) is a pre-processor scripting language that will be compiled or interpreted into CSS. SassScript is itself a scripting language whereas SCSS is the main syntax for the SASS which builds on top of the existing CSS syntax\n\n. . .\n\nSass reduces repetition of CSS and therefore saves time - think of it like manually changing code vs using functions in R.\n\n. . .\n\nColor palette: [`#404042`]{style=\"background-color: #404042;\"} [`#3c6f9a`]{style=\"background-color: #3c6f9a;\"} [`#fa551b`]{style=\"background-color: #fa551b;\"}\n\n. . .\n\n```css\n$primary_1: #a2b9bc;\n$primary_2: #b2ad7f;\n$primary_3: #878f99;\n\n/* use the variables */\n.main-header {\n  background-color: $primary_1;\n}\n\n.menu-left {\n  background-color: $primary_2;\n}\n\n.menu-right {\n  background-color: $primary_3;\n}\n```\n\n## SASS variables + Quarto\n\n<iframe src=\"https://quarto.org/docs/output-formats/html-themes.html#sass-variables\" height=\"800\" width=\"1200\" ></iframe>\n\n## `format: PDF`\n\nTIP!\n- pandoc divs/spans are generally transferrable\n- CSS is _not_ transferable\n- Lean on Quarto/Pandoc tooling and then reach for raw CSS/LaTeX\n\n# `r fontawesome::fa(\"laptop-code\", \"white\")` Your Turn {background-color=\"#447099\" transition=\"slide-in\"}\n\n- Open `materials/workshop/01-intro/history.qmd`\n- Render as HTML and then render as PDF\n\n```{R}\n#| echo: false\ncountdown_timer(3)\n```"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","self-contained":true,"css":["theme/theme.css"],"output-file":"04-static-documents.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.4.554","auto-stretch":true,"editor":"source","slideNumber":"c/t","width":1920,"height":1080,"logo":"https://www.rstudio.com/wp-content/uploads/2018/10/RStudio-Logo-Flat.png","footer":"[Get started with Quarto](https://rstudio-conf-2022.github.io/get-started-quarto/)","theme":"simple"}}},"projectFormats":["html"]}